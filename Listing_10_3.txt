Listing 10.3. Tests for the validity of a new micropost. 
subl spec/models/micropost_spec.rb
require 'spec_helper'

describe Micropost do

  let(:user) { FactoryGirl.create(:user) }
  before do
    # This code is not idiomatically correct.
    @micropost = Micropost.new(content: "Lorem ipsum", user_id: user.id)
  end

  subject { @micropost }

  it { should respond_to(:content) }
  it { should respond_to(:user_id) }

  it { should be_valid }

  describe "when user_id is not present" do
    before { @micropost.user_id = nil }
    it { should_not be_valid }
  end
end




######OLD
require 'spec_helper'

describe Micropost do

  let(:user) { FactoryGirl.create(:user) }
  before do
    # This code is not idiomatically correct.
    @micropost = Micropost.new(content: "Lorem ipsum", user_id: user.id)
  end

  subject { @micropost }

  it { should respond_to(:content) }
  it { should respond_to(:user_id) }
end

###This is Failure before FIX 10.4
Failures:

  1) Micropost when user_id is not present 
     Failure/Error: it { should_not be_valid }
       expected #<Micropost id: nil, content: "Lorem ipsum", user_id: nil, created_at: nil, updated_at: nil> not to be valid
     # ./spec/models/micropost_spec.rb:21:in `block (3 levels) in <top (required)>'

Finished in 4.59 seconds
127 examples, 1 failure

Failed examples:

rspec ./spec/models/micropost_spec.rb:21 # Micropost when user_id is not present 

####When

let(:user) { FactoryGirl.create(:user) }
before do
  # This code is not idiomatically correct.
  @micropost = Micropost.new(content: "Lorem ipsum", user_id: user.id)
end
from Listing 10.3 with

let(:user) { FactoryGirl.create(:user) }
before { @micropost = user.microposts.build(content: "Lorem ipsum") }




Failures:

  1) Micropost 
     Failure/Error: before { @micropost = user.microposts.build(content: "Lorem ipsum") }
     NoMethodError:
       undefined method `microposts' for #<User:0xb7d2f48>
     # ./spec/models/micropost_spec.rb:7:in `block (2 levels) in <top (required)>'

  2) Micropost 
     Failure/Error: before { @micropost = user.microposts.build(content: "Lorem ipsum") }
     NoMethodError:
       undefined method `microposts' for #<User:0xb88b908>
     # ./spec/models/micropost_spec.rb:7:in `block (2 levels) in <top (required)>'

  3) Micropost 
     Failure/Error: before { @micropost = user.microposts.build(content: "Lorem ipsum") }
     NoMethodError:
       undefined method `microposts' for #<User:0xb8978e8>
     # ./spec/models/micropost_spec.rb:7:in `block (2 levels) in <top (required)>'

  4) Micropost when user_id is not present 
     Failure/Error: before { @micropost = user.microposts.build(content: "Lorem ipsum") }
     NoMethodError:
       undefined method `microposts' for #<User:0xb89cd98>
     # ./spec/models/micropost_spec.rb:7:in `block (2 levels) in <top (required)>'

Finished in 0.04901 seconds
4 examples, 4 failures

Failed examples:

rspec ./spec/models/micropost_spec.rb:12 # Micropost 
rspec ./spec/models/micropost_spec.rb:11 # Micropost 
rspec ./spec/models/micropost_spec.rb:14 # Micropost 
rspec ./spec/models/micropost_spec.rb:18 # Micropost when user_id is not present 

